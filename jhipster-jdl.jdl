/**
 * SERVICE_MANAGER entity of Organization.
 * @author KagariV.
 */
entity OrgUser {
	deviceId String
	phone String required minlength(10) maxlength(11)
	role Role required
}
/*
 * User Role
 * @author KagariV
 */
enum Role {
	SERVICE_MANAGER, SUPERVISOR, SALE
}
/**
 * Group entity of Organization.
 * @author KagariV.
 */
entity OrgGroup {
	name String maxlength(100)
}

entity OrgNotification {
	title String required
	desc String required
	data String
	isRead Boolean required
	status NotificationStatus required
}

enum NotificationStatus {
	PROCESS, SUCCESS, WARNING, ERROR, INFOMATION
}
/**
 * SvcContract entity of SVC.
 * @author KagariV.
 */
entity SvcContract {
	orderNumber Long required
	documentId String
	appendicesNumber String
	fileId String
	content String
	effectiveTimeFrom Instant required
	effectiveTimeTo Instant required
	durationMonth Integer required
	value BigDecimal required
	contractValue BigDecimal required
	humanResources Integer
	humanResourcesWeekend Integer
	status SvcContractStatus required
	subjectCount Long
	valuePerPerson BigDecimal
	year Integer
}
enum SvcContractStatus {
	SUCCESS, PENDING, TIMEOUT, UNREQUEST, WORKING
}
/**
 * Target(which will be work on) entity of SVC.
 * @author KagariV.
 */
entity SvcTarget {
	name String maxlength(100)
}
/**
 * TargetType(what type of target) entity of SVC.
 * @author KagariV.
 */
entity SvcTargetType {
	name String maxlength(100)
}
// SVC unit
/**
 * Client entity of SVC.
 * @author KagariV.
 */
entity SvcClient {
	customerName String required minlength(0) maxlength(200)
	customerCity String required
	phoneNumber String required minlength(10) maxlength(11)
	type String maxlength(300) required
	address String required maxlength(300)
}
/**
 * Unit entity of SVC.
 * @author KagariV.
 */
entity SvcUnit {
	name String required minlength(0) maxlength(200)
	description String required maxlength(300)
}
/**
 * Group entity of SVC.
 * @author KagariV.
 */
entity SvcGroup {
	name String unique required maxlength(200)
	description String required maxlength(300)
	address String required maxlength(300)
}
/**
 * Schedule
 * 
 */
relationship OneToOne {
	OrgUser{internalUser} to User
}
relationship ManyToOne {
	SvcContract{approvedBy} to User, SvcContract{ownerBy} to User,
	OrgUser{group} to OrgGroup , SvcUnit{group} to SvcGroup , SvcContract{unit} to SvcUnit , SvcContract{saler} to OrgUser , SvcContract{client} to SvcClient , SvcTarget{type} to SvcTargetType
}
relationship OneToMany {
	SvcTarget{childs} to SvcTarget , SvcContract{targets} to SvcTarget, OrgUser{notifications} to OrgNotification
}
// Set pagination options
paginate OrgUser, OrgGroup with infinite-scroll
paginate * with pagination
filter *
// Use Data Transfer Objects (DTO)
dto * with mapstruct
// Set service options to all except few
service all with serviceImpl except OrgUser, OrgGroup
// Set an angular suffix
// angularSuffix * with mySuffix